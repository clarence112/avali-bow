[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://e126wgc60m6c"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_lk34k"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_27s0c"]
constant = 0.5

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_ml16m"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.5, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_h7m63"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_1c0j5"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_mqask"]
parameter_name = "ColorParameter"
default_value_enabled = true
default_value = Color(1, 0.54902, 0.0470588, 1)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_df4ih"]
parameter_name = "ColorParameter2"
default_value_enabled = true
default_value = Color(0.310617, 0.310617, 0.310617, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_mylyg"]
constant = 0.3

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_bqbpi"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.5, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(1, 1, 1), 5, Vector3(1.45519e-11, 1.45519e-11, 1.45519e-11)]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_jxspg"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5)]
operator = 3

[resource]
code = "shader_type spatial;
uniform vec4 ColorParameter : source_color = vec4(1.000000, 0.549020, 0.047059, 1.000000);
uniform vec4 ColorParameter2 : source_color = vec4(0.310617, 0.310617, 0.310617, 1.000000);



void fragment() {
// Input:3
	vec2 n_out3p0 = UV;


// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;


// ColorParameter:5
	vec4 n_out5p0 = ColorParameter;


// ColorParameter:6
	vec4 n_out6p0 = ColorParameter2;


	vec3 n_out2p0;
// If:2
	float n_in2p1 = 0.50000;
	float n_in2p2 = 0.00001;
	if(abs(n_out4p0 - n_in2p1) < n_in2p2)
	{
		n_out2p0 = vec3(n_out5p0.xyz);
	}
	else if(n_out4p0 < n_in2p1)
	{
		n_out2p0 = vec3(n_out6p0.xyz);
	}
	else
	{
		n_out2p0 = vec3(n_out5p0.xyz);
	}


// FloatConstant:7
	float n_out7p0 = 0.300000;


// FloatConstant:11
	float n_out11p0 = 0.500000;


	vec3 n_out8p0;
// If:8
	float n_in8p1 = 0.50000;
	float n_in8p2 = 0.00001;
	vec3 n_in8p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in8p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out4p0 - n_in8p1) < n_in8p2)
	{
		n_out8p0 = n_in8p3;
	}
	else if(n_out4p0 < n_in8p1)
	{
		n_out8p0 = n_in8p5;
	}
	else
	{
		n_out8p0 = vec3(n_out5p0.xyz);
	}


// FloatConstant:10
	float n_out10p0 = 0.500000;


// VectorOp:9
	vec3 n_out9p0 = n_out8p0 / vec3(n_out10p0);


// Output:0
	ALBEDO = n_out2p0;
	METALLIC = n_out7p0;
	ROUGHNESS = n_out11p0;
	EMISSION = n_out9p0;


}
"
graph_offset = Vector2(-217.896, 234.485)
nodes/fragment/0/position = Vector2(640, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeIf_ml16m")
nodes/fragment/2/position = Vector2(197.354, 214.554)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_h7m63")
nodes/fragment/3/position = Vector2(-320, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorDecompose_1c0j5")
nodes/fragment/4/position = Vector2(-20, 140)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_mqask")
nodes/fragment/5/position = Vector2(-180, 360)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorParameter_df4ih")
nodes/fragment/6/position = Vector2(-180, 520)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_mylyg")
nodes/fragment/7/position = Vector2(380, 280)
nodes/fragment/8/node = SubResource("VisualShaderNodeIf_bqbpi")
nodes/fragment/8/position = Vector2(200, 580)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorOp_jxspg")
nodes/fragment/9/position = Vector2(420, 520)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatConstant_lk34k")
nodes/fragment/10/position = Vector2(420, 720)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatConstant_27s0c")
nodes/fragment/11/position = Vector2(380, 360)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 2, 0, 6, 0, 2, 5, 7, 0, 0, 2, 4, 0, 8, 0, 5, 0, 8, 4, 8, 0, 9, 0, 9, 0, 0, 5, 10, 0, 9, 1, 11, 0, 0, 3, 2, 0, 0, 0, 5, 0, 2, 3, 5, 0, 2, 4)
